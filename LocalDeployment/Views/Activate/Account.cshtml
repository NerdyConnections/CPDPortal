@model CPDPortalMVC.Models.UserActivationModel


@using CPDPortalMVC.Util
@{
   Layout = "~/Views/Shared/_LoginMaster.cshtml";
}
<style>

    #Province {

        width : 300px;
    }

    .frmProgramRequest label {
    font-size: 15px;
    margin-bottom: -4px;
}

    input[type=checkbox] {

        margin-right:2px;
        margin-left :2px;
    }

</style>

@using (Html.BeginForm("Account", "Activate", FormMethod.Post))
{
   @Html.HiddenFor(model => model.UserId);
    @Html.HiddenFor(model => model.UserType);
    <div class="pnl-portal frmProgramRequest">
                <div class="row">
                    <div class="col-md-12">
                        <!-- <h1 id="lblTitle"></h1>-->
                        <h1>AMGEN CPD Account Activation</h1>
                        <div class="lead1">Please complete and/or update any relevant fields below and create your permanent password.</div>
                        @*<div class="btn-back"><span class="glyphicon glyphicon-chevron-left"></span><span>Back</span></div>*@
                        
                    </div>
                </div>
               
                <div class="row"></div>

                <div class="row">
                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="First Name">First Name: </label>                       
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "control-label" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="Last Name">Last Name:</label>
                        @Html.TextBoxFor(model => model.LastName, new { @class = "control-label" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="Phone Number">Phone Number:</label>
                        @Html.TextBoxFor(model => model.Phone, new { @class = "control-label" })
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="Additional Phone Number (optional)">Additional Phone Number (optional):  </label>
                        @Html.TextBoxFor(model => model.AdditionalPhone, new { @class = "control-label" })
                    </div>


                    <div class="form-group form-group-sm col-sm-4">
                        <label class="" title="province">Province: please select one from the drop down menu</label>
                        @Html.DropDownListFor(model => model.Province, new SelectList(UserHelper.GetProvinces(), "Value", "Text"), "Please Select Province", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Province, "", new { @class = "text-danger" })
                                               
                    </div>
                </div>

@if (Model.UserType != 5 && Model.UserType != 6)
{

   <div class="row">
         <div class="form-group form-group-sm col-sm-6">
        <label class="" title="Province: Please select all provinces that you cover">Province: Please select all provinces that you cover  </label>
        <div id="provinceCheckboxes">

            @for (var pr = 0; pr < Model.Provinces.Count(); pr++)
            {


                @Html.CheckBoxFor(p => p.Provinces[pr].Checked)

                @*<input id="@Model.Provinces[pr].Id" type="checkbox" name="Provinces" value="@Model.Provinces[pr].Name" checked="@Model.Provinces[pr].Checked" />*@
                @Html.DisplayFor(p => p.Provinces[pr].Name)
            }

            <input class="form-check-input" type="checkbox" id="checkAllProvinces" value="option3">
            <label class="form-check-label" for="inlineCheckbox" style="padding-right:10px">ALL</label>
            @Html.ValidationMessageFor(m => m.Provinces, "", new { @class = "text-danger" })

        </div>
        
    </div>


   

        <div class="form-group form-group-sm col-sm-6">
            <!--
            <label class="" title="Your Territory ID">Your Territory ID:  </label>
            <div id="TerritoryCheckboxes">
                @Html.RadioButtonFor(m => m.Territories, "1") 41
                @Html.RadioButtonFor(m => m.Territories, "2") 43
                @Html.RadioButtonFor(m => m.Territories, "3") 44
                @Html.RadioButtonFor(m => m.Territories, "4") 47
                @Html.RadioButtonFor(m => m.Territories, "5") 48
                @Html.RadioButtonFor(m => m.Territories, "6") LTC Bone




                @*<input class="form-check-input" type="checkbox" id="checkAllTerritory" value="option3">*@
                @*<label class="form-check-label" for="inlineCheckbox" style="padding-right:10px">ALL</label>*@
                @Html.ValidationMessageFor(m => m.Territories, "", new { @class = "text-danger" })
                 </div>
                -->
           
        </div>
    
            </div>
}
    


                   

                       

                <div class="row">
                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="Username">Username:</label>
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="password">Password:</label>
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control" , @type = "password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group form-group-sm col-sm-2">
                        <label class="" title="re-enter password">Re-enter Password:</label>
                        @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control" , @type = "password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="row">
                    <div class="form-group form-group-sm col-sm-2 pull-right">
                        <!-- Trigger the modal with a button -->
                     
                           <input type="submit" class="form-control btn btn-default btn-sm" id="btnSubmit" value="SUBMIT" >
                    
                </div>
                </div>
</div>
   
   

    <script>

        $(document).ready(function () {

          

           // $('#checkAllTerritory').on("click", function () {
               
           //     if ($('#checkAllTerritory').is(":checked")) {
                  
           //        $('#TerritoryCheckboxes :checkbox').each(function () {     
           //            $(this).prop("checked", true);
           //        });               
                  
           //     } else {
                  
           //         $('#TerritoryCheckboxes :checkbox').each(function () {
           //             $(this).prop("checked", false);
           //         });
                 
           //     }
           //});



            $('#checkAllProvinces').on("click", function () {

                if ($('#checkAllProvinces').is(":checked")) {
         
                   $('#provinceCheckboxes :checkbox').each(function () {     
                       $(this).prop("checked", true);
                   });                
                  
                } else {
              
                   $('#provinceCheckboxes :checkbox').each(function () {
                       $(this).prop("checked", false);
                   });
               }
           });
                   


          
           

        });


       

    </script>


}

